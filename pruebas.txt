./data/1999_28

real    0m40.901s
user    0m40.068s
sys     0m2.789s

-----------------

./data/2015_50

real    0m20.332s
user    0m19.039s
sys     0m1.252s

-----------------

./data/2015_50

real    0m21.749s
user    0m20.983s
sys     0m0.753s

-----------------

./data/2015_50

real    0m20.098s
user    0m19.440s
sys     0m0.640s

-----------------

Como metrica:
Agregar un contador de los calculos de las celulas que se hacen, y hacer el calculo del tiempo/cant de celulas calculadas

La mejora de optimizar el cpp es insignificante, asi que hay q optimizar el algoritmo de generacion de la animacion en 
"fire_spread.py"

----------------------- 2015_50

----------------------- sin optimizacion

real    0m35.280s
user    0m24.743s
sys     0m10.526

----------------------- O1

real    0m23.691s
user    0m12.373s
sys     0m11.301s

----------------------- O2

real    0m22.742s
user    0m11.959s
sys     0m10.779s

----------------------- O3

real    0m22.919s
user    0m12.208s
sys     0m10.710s



ignition_cells, spread_functions y fire_animation_data dieron menores resultados al optimizarse por separado 

20/03

Optimizamos el uso de la memoria y agregamos una metrica que ve la cantidad de celdas incendiadas por microsegundo

Notamos que al aumentar el tama√±o del landscape aumenta la cantidad de celdas incendiadas por segundo. 
Suponemos que esto se debe a que se desestima mayormente el ruido de maquina. (este afecta mas a casos mas cortos)